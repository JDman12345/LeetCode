class Solution {
public:
    int myAtoi(string s) {
        int ans = 0;
        bool isNegative = false;
        int i = 0;
        int end = s.length();
        
        while(i < s.length() && s[i] == ' '){
            i++;
        }

        if ( i < s.length()){
            if(s[i] == '-'){
                isNegative = true;
                i += 1;
            } else if (s[i] == '+'){
                i += 1;
            }
        }
        
        int digit = 0;
        while(i < s.length() && isdigit(s[i])){
            digit = s[i] - '0';

            if(ans > (INT_MAX / 10) || (ans == (INT_MAX / 10) && digit > 7)){
                return isNegative ? INT_MIN : INT_MAX;
            }

            ans = (ans*10) + digit; // We check ans before multiplying by 10 to avoid int overflow
            i++;
        }

        return isNegative ? -ans : ans;
    }
};
