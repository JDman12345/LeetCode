/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* addOneRow(TreeNode* root, int val, int depth) {
        int curDepth = 1;
        if(depth == 1){
            TreeNode* temp = new TreeNode(val);
            temp->left = root;
            return temp;
        }else{
            dfs(root, val, depth, curDepth);
        return root;
        }
    }

    void dfs(TreeNode* root, int val, int depth, int curDepth){
        if(root == NULL) return;
        if(curDepth + 1 == depth){
            TreeNode* lTemp = new TreeNode(val);
            lTemp->left = root->left;
            root->left = lTemp;

            TreeNode* rTemp = new TreeNode(val);
            rTemp->right = root->right;
            root->right = rTemp;
            
            return;
        }else{
            dfs(root->left, val, depth, curDepth + 1);
            dfs(root->right, val, depth, curDepth + 1);
        }
    }
};
