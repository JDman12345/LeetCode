/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* dummy = new ListNode(0, l1);
        ListNode* cur = dummy;
        int carry = 0;
        int curVal = 0;
        int v1 = 0;
        int v2 = 0;
        while(l1 != NULL || l2 != NULL || carry != 0){
            l1 != NULL ? v1 = l1->val : v1 = 0;
            l2 != NULL ? v2 = l2->val : v2 = 0;

            curVal = v1 + v2 + carry; // Find value and carry and then input value into list node
            carry = curVal / 10;
            curVal = curVal % 10;
            cur->next = new ListNode(curVal);

            cur = cur->next;
            if(l1 != NULL)l1 = l1->next;
            if(l2 != NULL)l2 = l2->next;
        }

        return dummy->next;
    }
};
